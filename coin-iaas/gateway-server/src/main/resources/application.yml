server:
  port: 80  # 网关端口一般 80
spring:
  application:
    name: gateway-server
  cloud:
    nacos:
      discovery:
        server-addr: nacos-server:8848  # 通过域名代替 ip 地址，修改本机 host 文件即可
    gateway:
      discovery:
        locator:
          enabled: true
          # 小驼峰规则
          lower-case-service-id: true # admin-server ADMIN-SERVER /admin-server/** -> 微服务(ADMIN-SERVER)
      routes:
        - id: admin-server_router
          # lb:// 负载均衡访问
          uri: lb://admin-server # 转发到哪个目的地
          predicates:
            - Path=/admin/**  # 当 path 是 /admin/** 时，可以转发到 admin-server 里
        - id: test_router
          uri: https://github.com/
          predicates:
            - Path=/kiwi6185

    # 通过网关来完成对两种维度的限流：网关维度 + API 分组
    sentinel:
      transport:
        dashboard: sentinel-server:8858
      datasource:
#        ds1.file:
#          file: classpath:gw-flow.json  # 网关 + API分组的限流
#          ruleType: gw_flow
        ds1.nacos:  # error：com.alibaba.csp.sentinel.datasource.nacos.NacosDataSource。使用 nacos 持久化 sentinel 数据时，需要添加依赖 nacos-datasource
          serverAddr: nacos-server:8848
          dataId: gw-flow
          ruleType: gw_flow
#        ds2.file:
#          file: classpath:api-group.json
#          ruleType: gw_api_group
        ds2.nacos:
          serverAddr: nacos-server:8848
          dataId: api-group
          ruleType: gw_api_group
  redis:
    host: redis-server
    port: 6380
    password: 123456

# 我们演示了sentinel-dashboard规则的定义，而且规则定义好了后，我们的网关立马感知到（生效）（nacos无法感知），但是我们下次重启，会丢失规则 -> nacos
